{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Footer.js","Home.js","MoviePage.js","SearchBar.js","Nav.js","GridCard.js","SearchResult.js","Upcoming.js","SeriePage.js","getMovieLink.js","DownloadPage.js","Download.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","antIcon","LoadingOutlined","style","fontSize","spin","base_url","Row","title","fetchUrl","isLargeRow","dark","useState","movies","setMovies","loading","setLoading","useEffect","a","get","request","data","results","fetchData","className","indicator","map","movie","poster_path","key","id","onClick","movieName","original_name","movieId","firstAir","first_air_date","window","location","href","src","backdrop_path","alt","name","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchUpcoming","fetchLatest","Banner","setMovie","truncate","str","n","length","substr","Math","floor","random","backgroundPosition","backgroundSize","backgroundImage","overview","Footer","icon","faHeart","Home","MoviePage","props","trailerUrl","setTrailerUrl","match","params","fetchRecommendation","openMovie","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","fetchTrailer","MovieRating","vote_average","videoId","opts","height","width","playerVars","autoplay","release_date","runtime","Rating","size","max","value","readOnly","type","margin","DownloadOutlined","danger","CaretRightOutlined","Search","Input","withRouter","searchQuery","setSearchQuery","placeholder","enterButton","onSearch","onChange","e","text","target","Nav","show","handleShow","showSearchBar","setShowSearchBar","showSearchIcon","setShowSearchIcon","addEventListener","scrollY","removeEventListener","faSearch","GridCard","image","lg","md","xs","position","Title","Typography","SearchResult","query","searchUrl","setShow","color","level","marginTop","Upcoming","setResults","currentPage","setCurrentPage","fetchMovies","path","fetch","response","json","page","endPoint","gutter","index","Fragment","display","justifyContent","SeriePage","fetchSerie","number_of_seasons","seasons","movieSeason","charAt","DownloadPage","movieType","getMovieLink","res","torrents","handleDownload","padding","result","marginBottom","uploader","leech","seed","link","Download","torrent","movieID","setResult","message","description","showIcon","closable","uploaded","leechers","seeders","language","downloads","download","magnet","App","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a23ef003.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n  \n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\n\nconst base_url = \"https://images.tmdb.org/t/p/original/\";\n\nfunction openMovie(movieName, movieId, firstAir) {\n    if(firstAir){\n        window.location.href = \"/serie/\" + movieName + \"/\" + movieId;\n    }else {\n        window.location.href = \"/movie/\" + movieName + \"/\" + movieId;\n    }\n}\n\nfunction Row({ title, fetchUrl, isLargeRow, dark }) {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    \n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            setLoading(false);\n            return request;\n        }\n        fetchData();\n    },[fetchUrl]);\n\n     \n\n    return (\n        <div className={`row`}>\n            <h2 className={dark ? \"dark\" : \"white\"}>{title}</h2>\n            <div className=\"row__posters\" >\n                {loading? <div className=\"spinnerdiv\"> \n                            <div className=\"spinner\" >\n                                <Spin indicator={antIcon} /> \n                            </div>\n                        </div> :\n                movies.map(movie => {\n                    return(\n                        <>\n                            {movie.poster_path !== null ?  <img \n                            key={movie.id}\n                            onClick={() => openMovie(movie?.title  || movie?.original_name, movie.id, movie.first_air_date)}\n                            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                            src={isLargeRow ? `${base_url}${movie.poster_path}`: `${base_url}${movie?.backdrop_path}` } \n                            alt={movie.name} /> : null}\n                        </>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Row;","const API_KEY = '95fce0ee486a7e07be590380ef474a9f';\n\n\nconst requests = {\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    fetchUpcoming: `/movie/upcoming?api_key=${API_KEY}&language=en-US`,\n    fetchLatest: `/movie/popular?api_key=${API_KEY}&languge=en-US&page=1`,\n}\n\nexport default requests;\n\n","import React, { useState, useEffect } from 'react';\nimport requests from './requests';\nimport axios from './axios';\nimport './Banner.css';\n\nfunction Banner () {\n    const [movie, setMovie] = useState([]);\n\n    function openMovie(movieName, movieId, firstAir) {\n        if(firstAir){\n            window.location.href = \"/serie/\" + movieName + \"/\" + movieId;\n        }else {\n            window.location.href = \"/movie/\" + movieName + \"/\" + movieId;\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1)\n            ]);\n            return request;\n        }\n        fetchData();\n    },[])\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    };\n\n    return(\n        <header className=\"banner\"\n           style={{\n               backgroundPosition: \"center\",\n               backgroundSize: \"cover\",\n               backgroundImage: `url(\n                   \"https://images.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n               )`\n           }}\n        >\n            <div className=\"banner__contents\" >\n                <h1 className=\"banner__title\">{truncate(movie?.title || movie?.name || movie?.original_name, 30)}</h1>\n                \n                <div className=\"banner_buttons\">\n                    <button className=\"banner__button\" onClick={() => openMovie(movie?.title  || movie?.original_name, movie.id, movie.first_air_date)}>Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                <h1 className=\"banner__description\">\n                    {truncate(movie?.overview, 150)}\n                </h1>\n            </div>\n            <div className=\"banner--fadeBottom\" />\n        </header>\n    )\n}\n\nexport default Banner;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport './Footer.css';\n\nfunction Footer({ dark }) {\n    return(\n        <div className={`footer`} >\n            <p className={dark ? \"dark\" : \"white\"}>Made with <FontAwesomeIcon icon={faHeart} className=\"loveIcon\" /> by Paschal</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Footer from './Footer';\nimport './App.css';\n \n\nfunction Home() {\n  return (\n    <div className=\"App\">\n       <Banner />\n       <Row isLargeRow title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n       <Row \n       title=\"NETFLIX ORIGINAL\"\n       isLargeRow \n       fetchUrl={requests.fetchNetflixOriginals} />\n       <Row isLargeRow title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n       <Row title=\"Comedy movies\" fetchUrl={requests.fetchComedyMovies} />\n       <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n       <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n       <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n       <Row isLargeRow title=\"Upcoming Movies\" fetchUrl={requests.fetchUpcoming} /> \n       <Row isLargeRow title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n       <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport { Button } from 'antd';\nimport Rating from '@material-ui/lab/Rating';\nimport Row from './Row';\nimport Footer from './Footer';\nimport { DownloadOutlined, CaretRightOutlined } from '@ant-design/icons';\n \n\nimport './MoviePage.css';\n \nconst base_url = \"https://images.tmdb.org/t/p/original/\";\n\nfunction MoviePage(props) {\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    const [movie, setMovie] = useState([]);\n    const API_KEY = '95fce0ee486a7e07be590380ef474a9f';\n    const movieId = props.match.params.movieId;\n    const movieName = props.match.params.movieName;\n    const fetchUrl = `/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    const fetchRecommendation = `/movie/${movieId}/recommendations?api_key=${API_KEY}&language=en-US&page=1`\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: false,\n        }\n    };\n\n    function openMovie(movieName, firstAir) {\n        if(firstAir){\n            window.location.href = \"/download/TV/\" + movieName ;\n        }else {\n            window.location.href = \"/files/movie/\" + movieName + '%20720p';\n        }\n    }\n    \n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovie(request.data);\n            return request;\n        }\n        async function fetchTrailer() {\n            await movieTrailer(movieName || \"\")\n              .then((url) => {\n                  const urlParams = new URLSearchParams(new URL(url).search);\n                  setTrailerUrl(urlParams.get(\"v\"));\n              })\n              .catch((error) => console.log(movieName));\n        }\n        fetchData();\n        fetchTrailer();\n    },[fetchUrl, movieName])\n\n    const MovieRating = Math.floor(movie?.vote_average)\n\n\n    return(\n        <div>\n            {trailerUrl ? <YouTube videoId={trailerUrl} opts={opts} /> : <div className=\"banner\"\n           style={{\n               backgroundSize: \"cover\",\n               backgroundPosition: \"center\",\n               height: \"390px\",\n               width: \"100%\",\n               backgroundImage: `url(\n                   \"https://images.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n               )`\n           }}\n        ></div>}\n        <div className=\"container\">\n            <img \n            src={`${base_url}${movie.poster_path}`}\n            alt={movie.name}\n            className=\"movieImg\"\n            key={movie.id} />\n            <div className=\"movieDescription\" >\n                <p>Title: <span>{movie.title}</span> </p>\n                <p>Release date: <span>{movie.release_date}</span> </p>\n                <p>Duration:  <span>{movie.runtime} mins </span> </p>\n                <p>Rating: {movie.vote_average} <Rating name=\"read-only\" size=\"large\" max={10} value={MovieRating} readOnly /></p>\n                <p>Overview: <span> {movie.overview}</span> </p>\n                <div>\n                    <Button type=\"primary\" \n                    onClick={() => openMovie(movie?.title  || movie?.original_name, movie.first_air_date)} \n                    style={{ margin: \"5px\" }} \n                    icon={<DownloadOutlined />} size=\"large\">\n                    Download\n                    </Button>\n                    <Button type=\"primary\" danger\n                    onClick={() => openMovie(movie?.title  || movie?.original_name, movie.first_air_date)} \n                    style={{ margin: \"2px\" }} \n                    icon={<CaretRightOutlined />} size=\"large\">\n                    Stream Online\n                    </Button>\n                </div>\n                </div>\n            </div>\n            <br/>\n            <div className=\"recommended\">\n                    <Row isLargeRow dark title=\"Recommended for you\" fetchUrl={fetchRecommendation} /> \n                </div>\n                    <Footer dark />\n        </div>\n         \n    )\n}\n\nexport default MoviePage;","import React, { useState } from 'react';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { withRouter } from 'react-router-dom';\nimport './searchBar.css';\nimport { Input } from 'antd';\n\nconst { Search } = Input;\n\nfunction SearchBar() {\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const handleInput = e => {\n        let text = e.target.value;\n        setSearchQuery(text);\n      }\n    const handleSubmit = () => {\n        window.location.href = \"/search/\" + searchQuery ;\n    }\n    return(\n        <div className=\"wrap\">\n            <div className=\"search\">\n                <Search\n                    placeholder=\"input search text\"\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={() => handleSubmit()}\n                    onChange={handleInput}\n                />\n                {/*<input type=\"text\" className=\"searchTerm\"\n                placeholder=\"Search for any movie here\"\n                onSearch={() => handleSubmit()} \n                onChange={handleInput}/>\n                <button type=\"submit\" onClick={() => handleSubmit()} className=\"searchButton\">\n                    <FontAwesomeIcon icon={faSearch} style={{ color: \"white\" }} />\n                 </button>*/}\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(SearchBar);","import React, { useEffect, useState } from 'react';\nimport SearchBar from './SearchBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport './Nav.css';\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n    const [showSearchBar, setShowSearchBar] = useState(false);\n    const [showSearchIcon, setShowSearchIcon] = useState(false);\n\n    function displaySearchBar() {\n        if(showSearchBar){\n            setShowSearchBar(false);\n        }else {\n            setShowSearchBar(true);\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if(window.scrollY > 100) {\n                handleShow(true);\n                setShowSearchIcon(true);\n            }else {\n                handleShow(false);\n                setShowSearchIcon(false);\n            }\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        }\n    },[]);\n\n    return (\n        <div> \n            <div className={`nav ${show && \"nav__black\"}` }>\n                <a href=\"/\"><h2 className=\"nav__logo\" >TraceMovies</h2></a>\n                <div className=\"nav__avatar\">\n                    <FontAwesomeIcon onClick={displaySearchBar} icon={faSearch} className={`searchIcon ${showSearchIcon && \"hideSearchIcon\"}`} />\n                    <a href=\"/movies\" ><button className=\"nav__btn\">MOVIES</button></a>\n                </div>\n            </div>\n            <div className={` ${showSearchBar && \"show__search\"}`}>\n                {showSearchBar? <SearchBar /> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport { Col } from 'antd';\n\n\nfunction openMovie(movieName, movieId, firstAir) {\n    if(firstAir){\n        window.location.href = \"/serie/\" + movieName + \"/\" + movieId;\n    }else {\n        window.location.href = \"/movie/\" + movieName + \"/\" + movieId;\n    }\n}\n\nfunction GridCard({ image, movie }) {\n    return(\n        <Col lg={6} md={8} xs={12}>\n            <div style={{ position: 'relative'}}>\n                <img \n                onClick={() => openMovie(movie?.title  || movie?.original_name, movie.id, movie.first_air_date)}\n                style={{ width:'100%', height:'320px'}} alt={image} src={image} />\n            </div>\n        </Col>\n    )\n}\n\nexport default GridCard;","import React, { useEffect, useState } from 'react';\nimport Banner from './Banner';\nimport axios from './axios';\nimport Row from './Row';\nimport requests from './requests';\nimport Footer from './Footer';\nimport GridCard from './GridCard';\nimport { Typography } from 'antd';\nimport './App.css';\nimport './Row.css';\nimport './Nav.css';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n  \n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\nconst { Title } = Typography;\n\n\n\nfunction SearchResult(props) {\n    const [movies, setMovies] = useState([]);\n    const API_KEY = '95fce0ee486a7e07be590380ef474a9f';\n    const query =  props.match.params.query; \n    const searchUrl = `/search/movie?query=${query}&api_key=${API_KEY}`;\n    const IMAGE_URL = 'https://images.tmdb.org/t/p/original/';\n    const [show, setShow] = useState(false);\n    \n     \n    \n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(searchUrl);\n            setMovies(request.data.results);\n            setShow(true);\n            return request;\n        }\n        fetchData();   \n    },[searchUrl]);\n    \n\n    return (\n        <div className=\"App\">\n            <Banner />\n            <div style={{width: '85%', margin: '1rem auto'}} >\n                <Title  style={{ color: 'white'}} level={2}>Results for {query} </Title>\n                <hr />\n                    {show ? movies?.length !== 0 ?  <Row dark isLargeRow  fetchUrl={searchUrl} /> \n                    : <h3 style={{ color: 'white', marginTop: '20px', height: '15vh' }}>Sorry we couldn't find \n                    the movie {query} .\n                     </h3>: <div className=\"spinnerdiv\"> \n                            <div className=\"spinner\" >\n                                <Spin indicator={antIcon} /> \n                            </div>\n                        </div>}  \n            </div>\n            <div className=\"recommended\">\n                <Row isLargeRow title=\"Recommended for you\" fetchUrl={requests.fetchActionMovies} /> \n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SearchResult;","import React, {useState, useEffect} from 'react';\nimport './Banner.css';\nimport GridCard from './GridCard';\nimport { Typography, Row, Spin } from 'antd';\nimport Footer from './Footer';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport requests from './requests';\nimport axios from './axios';\n\nconst { Title } = Typography;\n  \n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\n\nfunction Upcoming() {\n    const [movie, setMovie] = useState([]);\n    const [results, setResults] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const IMAGE_URL = 'https://images.tmdb.org/t/p/original/';\n\n    useEffect(() => {\n        const API_URL = 'https://api.themoviedb.org/3';\n        const API_KEY = '95fce0ee486a7e07be590380ef474a9f';\n        const endPoint = `${API_URL}/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`;\n        async function fetchData() {\n            const request = await axios.get(requests.fetchUpcoming);\n            setMovie(request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1)\n            ]);\n            return request;\n        }\n        fetchData();\n        fetchMovies(endPoint);\n    },[])\n    \n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    };\n\n\n    async function fetchMovies(path) {\n        setLoading(true);\n        await fetch(path)\n        .then(response => response.json())\n        .then(response => {\n            setResults([...results, ...response.results])\n            setCurrentPage(response.page)\n        })\n        setLoading(false);\n    }\n\n    const handleClick = () => {\n        const API_URL = 'https://api.themoviedb.org/3';\n        const API_KEY = '95fce0ee486a7e07be590380ef474a9f';\n        let endpoint = `${API_URL}/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n        fetchMovies(endpoint)\n    }\n\n    function openMovie(movieName, movieId, firstAir) {\n        if(firstAir){\n            window.location.href = \"/serie/\" + movieName + \"/\" + movieId;\n        }else {\n            window.location.href = \"/movie/\" + movieName + \"/\" + movieId;\n        }\n    }\n\n\n    return(\n        <div>\n            <header className=\"banner\"\n            style={{\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n                backgroundImage: `url(\n                    \"https://images.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n                )`\n            }}\n            >\n                <div className=\"banner__contents\" >\n                    <h1 className=\"banner__title\">{truncate(movie?.title || movie?.name || movie?.original_name, 30)}</h1>\n                    \n                    <div className=\"banner_buttons\">\n                        <button className=\"banner__button\" onClick={() => openMovie(movie?.title  || movie?.original_name, movie.id, movie.first_air_date)}>Play</button>\n                        <button className=\"banner__button\">My List</button>\n                    </div>\n                    <h1 className=\"banner__description\">\n                        {truncate(movie?.overview, 150)}\n                    </h1>\n                </div>\n                <div className=\"banner--fadeBottom\" />\n            </header>\n            <div style={{width: '85%', margin: '1rem auto'}} >\n                <Title level={2}>Movies by latest</Title>\n                <hr />\n                <Row gutter={[16, 16]}>\n                    {results?.map((movie,index) => {\n                        return ( \n                        <React.Fragment key={index}>\n                            <GridCard \n                            movie={movie}\n                            image={movie.poster_path && `${IMAGE_URL}${movie.poster_path}`}\n                            />\n                        </React.Fragment>\n                        )\n                    })}\n                </Row>    \n            </div>\n            {loading ? <div className=\"spinnerdiv\"> \n                                <div className=\"spinner\" >\n                                    <Spin indicator={antIcon} /> \n                                </div>\n                            </div> : null}\n                            <br/>\n            <div style={{ display: 'flex', justifyContent: 'center'}} >\n                <button onClick={handleClick}>load more</button>\n            </div>\n            <Footer dark />\n        </div>\n    )\n}\n\nexport default Upcoming;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport YouTube from 'react-youtube';\nimport Rating from '@material-ui/lab/Rating';\nimport movieTrailer from 'movie-trailer';\nimport { Button } from 'antd';\nimport Row from './Row';\nimport Footer from './Footer';\nimport { DownloadOutlined } from '@ant-design/icons';\n\n \n\nimport './MoviePage.css';\n \nconst base_url = \"https://images.tmdb.org/t/p/original/\";\n\nfunction SeriePage(props) {\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    const [movie, setMovie] = useState([]);\n    const API_KEY = '95fce0ee486a7e07be590380ef474a9f';\n    const movieId = props.match.params.movieId;\n    const movieName = props.match.params.movieName;\n    const fetchSerie = `/tv/${movieId}?api_key=${API_KEY}&language=en-US`\n    const fetchRecommendation = `/tv/${movieId}/recommendations?api_key=${API_KEY}&language=en-US&page=1`\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: false,\n        }\n    };\n\n    function openMovie(movieName, firstAir, movieSeason) {\n        if(firstAir){\n            window.location.href = \"/files/TV/\" + movieName + `%20S0${movieSeason}`;\n        }else {\n            window.location.href = \"/download/movie/\" + movieName;\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchSerie);\n            setMovie(request.data);\n            return request;\n        }\n        async function fetchTrailer() {\n            await movieTrailer(movieName || \"\")\n              .then((url) => {\n                  const urlParams = new URLSearchParams(new URL(url).search);\n                  setTrailerUrl(urlParams.get(\"v\"));\n              })\n              .catch((error) => console.log(movieName));\n            }\n        fetchData();\n        fetchTrailer();\n    },[fetchSerie, movieName])\n\n    const MovieRating = Math.floor(movie.vote_average);\n\n\n    return(\n        <div>\n            {trailerUrl ? <YouTube videoId={trailerUrl} opts={opts} /> : <div className=\"banner\"\n           style={{\n               backgroundSize: \"cover\",\n               backgroundPosition: \"center\",\n               height: \"390px\",\n               width: \"100%\",\n               backgroundImage: `url(\n                   \"https://images.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n               )`\n           }}\n            ></div>}\n            <div className=\"container\">\n                <img \n                src={`${base_url}${movie.poster_path}`}\n                alt={movie.name}\n                className=\"movieImg\"\n                key={movie.id} />\n                <div className=\"movieDescription\" >\n                    <p>Title: <span>{movie.name}</span> </p>\n                    <p>Release date: <span>{movie.first_air_date}</span> </p>\n                    <p>Number of seasons: <span>{movie.number_of_seasons} </span> </p>\n                    <p>Rating: {movie.vote_average}  <Rating name=\"read-only\" max={10} size=\"large\" value={MovieRating} readOnly /></p>\n                    <p>Overview: <span> {movie.overview}</span> </p>\n                    <div>\n                        {movie.seasons?.map((data) => {\n                            return (\n                                <Button type=\"primary\" \n                                    onClick={() => openMovie(movie?.name, movie?.first_air_date, data.name.charAt(7))} \n                                    style={{ margin: \"5px\" }} \n                                    icon={<DownloadOutlined />} size=\"large\">\n                                    Download {data.name}\n                                </Button>\n                            )\n                        })}\n                    </div>\n                    <br/>\n                    </div>\n            </div>\n            <br/>\n            <div className=\"recommended\">\n                        <Row isLargeRow dark title=\"Recommended for you\" fetchUrl={fetchRecommendation} /> \n                    </div>\n                        <Footer dark />\n        </div>\n    )\n}\n\nexport default SeriePage;","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://trace-backend.herokuapp.com/',\n//baseURL: 'http://localhost:5000',\n});","import React, {useEffect, useState} from 'react';\nimport getMovieLink from './getMovieLink';\nimport { Card, Button } from 'antd';\nimport { DownloadOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n \n  \n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\nfunction DownloadPage(props) {\n    const movieType = props.match.params.movieType;\n    const movieName = props.match.params.movieName;\n    const [results, setResults] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function handleDownload() {\n            const res = await getMovieLink.get(\"/movie\", {\n              params: { name: movieName, type: movieType }\n            });\n            setResults(res.data.torrents);\n             setLoading(false);\n          };\n        handleDownload();\n    },[movieName, movieType])\n\n    function openLink(link) {\n      window.location.href = \"/download\" + link\n    }\n\n    return(\n        <div style={{ marginTop: \"70px\", padding: \"5px\"}}>   \n          {loading ? <div className=\"spinnerdiv\"> \n                            <div className=\"spinner\" >\n                                <Spin indicator={antIcon} /> \n                            </div>\n                        </div> : \n          results?.map(result => {\n            return( \n            <>\n                <Card style={{ width: \"100%\", marginBottom: '5px' }}>\n                <p>FILE NAME: {result.title} </p>\n                <p>SIZE: {result.size} </p>\n                <p>UPLOADER: {result.uploader}  </p>\n                <p>LEECH: {result.leech} </p>\n                <p>SEEDERS: {result.seed} </p>\n                <Button onClick={() => openLink(result.href)} type=\"primary\" danger icon={<DownloadOutlined />} size={\"large\"}>\n                  Download this file\n                </Button>\n\n                </Card>\n             </>\n            )\n          })}\n        </div>\n    )\n}\n\nexport default DownloadPage;","import React, {useEffect, useState} from 'react';\nimport getMovieLink from './getMovieLink';\nimport { Alert } from 'antd';\nimport { Card, Button } from 'antd';\nimport { DownloadOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport Row from './Row';\nimport requests from './requests';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\nfunction  Download(props) {\n    const torrent = props.match.params.torrent;\n    const movieId = props.match.params.movieID;\n    const movieName = props.match.params.movieName;\n    const [result, setResult] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function handleDownload() {\n            const res = await getMovieLink.get(\"/download\", {\n              params: { torrent: torrent, movieId: movieId, movieName: movieName  }\n            });\n            setResult(res.data);\n             setLoading(false);\n          };\n        handleDownload();\n    },[movieId, torrent, movieName])\n\n    return(\n        <div style={{ marginTop: \"70px\", marginBottom: '5px', padding: \"5px\"}}>\n            <Alert \n              message=\"Instructions\" \n              description=\"make sure you have UTorrent installed in your device before clicking\n              on the download button. this movie will start downloading through utorrrent once\n              u click on the download button below... Enjoy\"\n              type=\"info\" showIcon closable/>\n              <br/>\n              {loading ? <div className=\"spinnerdiv\"> \n                            <div className=\"spinner\" >\n                                <Spin indicator={antIcon} /> \n                            </div>\n                        </div> :\n                  <Card style={{ width: \"100%\", marginBottom: '5px' }}>\n                  <p>FILE NAME: {result.title} </p>\n                  <p>SIZE: {result.size} </p>\n                  <p>UPLOADER: {result.uploaded}  </p>\n                  <p>LEECH: {result.leechers} </p>\n                  <p>SEEDERS: {result.seeders} </p>\n                  <p>LANGUAGE: {result.language} </p>\n                  <p>DOWNLOADS: {result.downloads} </p>\n                  <a href={result.download.magnet}><Button type=\"primary\" danger icon={<DownloadOutlined />} size={\"large\"}>\n                    click here to start Downloading\n                  </Button></a>\n                  </Card>}\n                  <br/>\n                  <Row dark isLargeRow title=\"you may also like\" fetchUrl={requests.fetchComedyMovies} />\n        </div>\n    )\n}\n\nexport default Download","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport MoviePage from './MoviePage';\nimport Nav from './Nav';\nimport SearchResult from './SearchResult';\nimport Upcoming from './Upcoming';\nimport SeriePage from './SeriePage';\nimport DownloadPage from './DownloadPage';\nimport Download from './Download'; \n \nfunction App() {\n  return (\n     <Router>\n       <Switch> \n         <Nav />\n          <Route exact path=\"/\" component={Home} /> \n          <Route path=\"/movie/:movieName/:movieId\" component={MoviePage} />\n          <Route path=\"/search/:query\" component={SearchResult} />\n          <Route path=\"/Movies\" component={Upcoming} />\n          <Route path=\"/serie/:movieName/:movieId\" component={SeriePage} />\n          <Route path=\"/files/:movieType/:movieName\" component={DownloadPage} />\n          <Route path=\"/download/:torrent/:movieID/:movieName\" component={Download} />\n       </Switch>\n     </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}